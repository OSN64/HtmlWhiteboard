 {{{curTheme}}}
<!DOCTYPE html>
<html lang="en">
<head>
  <title>Networked Canvas drawing - {{title}}</title>

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/linker/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
          -->

          <!--STYLES-->
          <!-- Latest compiled and minified CSS -->
          <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-design/0.1.6/css/ripples.min.css">
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-design/0.1.6/css/material-wfont.min.css">
          <link rel="stylesheet" href="//fezvrasta.github.io/snackbarjs/dist/snackbar.min.css">
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-design/0.1.6/css/material.min.css">
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/nprogress/0.1.6/nprogress.min.css">
          <link rel="stylesheet" href="/styles/importer.css">
          <!--STYLES END-->
        </head>

        <body>
          <div id="box" class="container">
            {{> nav}}

            {{#if errors}}
            <div class="alert alert-danger alert-dismissible" role="alert">
              <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span
                class="sr-only">Close</span></button>
                {{#each errors}}
                <div>{{this}}</div>
                {{/each}}
              </div>
              {{/if}}
              {{{ body }}}
            </div>


            <div class="container">
              <hr>

              <footer>
                <p>&copy; 3es 2014</p>
              </footer>
            </div>

<!--
    Client-side Templates
    ========================

    HTML templates are important prerequisites of modern, rich client applications.
    To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
    that you load these templates client-side.

    By default, your Gruntfile is configured to automatically load and precompile
    client-side JST templates in your `assets/linker/templates` folder, then
    include them here automatically (between TEMPLATES and TEMPLATES END).

    To customize this behavior to fit your needs, just edit your Gruntfile.
    For example, here are a few things you could do:

        + Import templates from other directories
        + Use a different template engine (handlebars, jade, dust, etc.)
        + Internationalize your client-side templates using a server-side
          stringfile before they're served.
        -->

        <!--TEMPLATES-->

        <!--TEMPLATES END-->

<!--

  Client-side Javascript
  ========================

  You can always bring in JS files manually with `script` tags, or asynchronously
  on the client using a solution like AMD (RequireJS).  Or, if you like, you can
  take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

  By default, filesin your `assets/linker/js` folder are included here
  automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
  CoffeeScript (.coffee) are supported. In production, your scripts will be minified
  and concatenated into a single file.

  To customize any part of the built-in behavior, just edit your Gruntfile.
  For example, here are a few things you could do:

      + Change the order of your scripts
      + Import scripts from other directories
      + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="//code.jquery.com/jquery.js"></script>
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-design/0.1.6/js/ripples.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-design/0.1.6/js/material.min.js"></script>
    <script src="//fezvrasta.github.io/snackbarjs/dist/snackbar.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/noUiSlider/6.2.0/jquery.nouislider.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/nprogress/0.1.6/nprogress.min.js"></script>
    <script src="//cdn.jsdelivr.net/jquery.jcanvas/13.04.26/jcanvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/6.2.0/jquery.nouislider.min.js"></script>
    <script src="/js/my-app.js"></script>
    <!--SCRIPTS END-->

    <script>
      $(document).ready(function() {
        NProgress.configure();
        // NProgress.configure({ parent: '.jumbotron' });
        NProgress.start();
        NProgress.done();
        $.material.init();
        {{#if home}}
          $("#objWidth").noUiSlider({
            start: 150,
            connect: "lower",
            range: {
              min: 0,
              max: 300
            }
          });

          $("#objHeight").noUiSlider({
            orientation: "vertical",
            start: 100,
            connect: "lower",
            range: {
              min: 0,
              max: 200
            }
          });
          // trying to set width and height dynamicaly
                // but run into the issu of having people with
                // different screen sizes sqrewing up drawing
                // console.log($('.jumbotron').height());
                // console.log($('.jumbotron').width());
                // $('canvas').attr({
                //   width: '1',
                //   height: '1'
                // });
        {{/if}}
    });
    </script>
  </body>
  </html>
